proxy_cache_path /srv/cache levels=1:2
                 keys_zone=my_cache:10m max_size=1g
                 inactive=60m use_temp_path=off;


server {
  listen *:80;
  server_name vbnm.gq vbnm.gq;
  rewrite ^ https://$host$request_uri? permanent;
  location /.well-known/acme-challenge {
    root /var/www/certbot;
  }
}

server {
  gzip on;
  # enables gzip compression
  gzip_vary on;
  # tells proxies to cache both gzipped and regular versions of a resource
  gzip_comp_level 4;
  # Sets a gzip compression level of a response.
  # Acceptable values are in the range from 1 to 9.
  # Actually should be 2, but I wanna check difference
  gzip_types
  text/plain
  text/css
  text/js
  text/xml
  text/javascript
  application/javascript
  application/x-javascript
  application/json
  application/xml
  application/rss+xml
  image/svg+xml;
  # types to compress
  gzip_proxied no-cache no-store private expired auth;
  # compress data even for clients that are connecting via proxies
  # (here we're enabling compression if: a
  # response header includes the "expired", "no-cache",
  # "no-store", "private", and "Authorization" parameters)
  gzip_min_length 1024;
  client_max_body_size 64M;

  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name vbnm.gq;
  server_tokens off;

  ssl_certificate /etc/letsencrypt/live/vbnm.gq/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/vbnm.gq/privkey.pem;

  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  ssl_buffer_size 8k;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
  ssl_ecdh_curve secp384r1;
  ssl_session_tickets off;

  # OCSP stapling
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 8.8.8.8;

  access_log /logs/nginx.access.log;
  error_log /logs/nginx.error.log;

  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  location /static {
    alias /static;
  }

  location /media {
    alias /media;
  }

  location / {
    proxy_cache my_cache;
    proxy_cache_revalidate on;
    proxy_cache_min_uses 1;
    proxy_cache_use_stale error timeout updating
    http_500 http_502
    http_503 http_504;
    add_header Cache-Control "public, no-transform, max-age=1209600";
    expires 14d;
    proxy_cache_background_update on;
    try_files $uri $uri/ /index.html;
    root /dist;
  }
  location /api/ {
    rewrite ^(.*)$ $1 break;
    proxy_pass http://django:8000/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
  location /en/api/ {
    rewrite ^(.*)$ $1 break;
    proxy_pass http://django:8000/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
  location /ru/api/ {
    rewrite ^(.*)$ $1 break;
    proxy_pass http://django:8000/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
  location /kz/api/ {
    rewrite ^(.*)$ $1 break;
    proxy_pass http://django:8000/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
  location /admin/ {
    rewrite ^(.*)$ $1 break;
    proxy_pass http://django:8000/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
  location /en/admin/ {
    rewrite ^(.*)$ $1 break;
    proxy_pass http://django:8000/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
  location /ru/admin/ {
    rewrite ^(.*)$ $1 break;
    proxy_pass http://django:8000/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
  location /kz/admin/ {
    rewrite ^(.*)$ $1 break;
    proxy_pass http://django:8000/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
